{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","Component","render","React","createElement","this","props","accountBalance","toFixed","Home","src","alt","Link","to","UserProfile","userName","memberSince","LogIn","constructor","super","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","Redirect","onSubmit","type","name","defaultValue","onChange","Credits","description","setDescription","useState","amount","setAmount","className","creditsView","credits","map","credit","date","slice","key","id","event","newCredit","parseFloat","Date","toISOString","addCredit","placeholder","required","test","Debits","debitsView","debits","debit","newDebit","addDebit","App","prevState","creditList","debitList","logInInfo","newUser","currentUser","[object Object]","creditsResponse","fetch","debitsResponse","creditsData","json","debitsData","reduce","acc","error","console","Router","basename","Route","exact","path","HomeComponent","UserProfileComponent","LogInComponent","CreditsComponent","DebitsComponent","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"8PAkBeA,MAXf,cAA6BC,YAE3BC,SACE,OACEC,IAAAC,cAAA,WACED,IAAAC,cAAA,cAAQ,cAAYC,KAAKC,MAAMC,eAAeC,QAAQ,OCmB/CC,MAtBf,cAAmBR,YACjBC,SACE,OACEC,IAAAC,cAAA,WACED,IAAAC,cAAA,OAAKM,IAAI,gCAAgCC,IAAI,SAE7CR,IAAAC,cAAA,UAAI,iBAEJD,IAAAC,cAACQ,IAAI,CAACC,GAAG,gBAAe,gBACxBV,IAAAC,cAAA,WACAD,IAAAC,cAACQ,IAAI,CAACC,GAAG,UAAS,SAClBV,IAAAC,cAAA,WACAD,IAAAC,cAACQ,IAAI,CAACC,GAAG,YAAW,iDACpBV,IAAAC,cAAA,WACAD,IAAAC,cAACQ,IAAI,CAACC,GAAG,WAAU,gDACnBV,IAAAC,cAAA,WAAKD,IAAAC,cAAA,WACLD,IAAAC,cAACJ,EAAc,CAACO,eAAgBF,KAAKC,MAAMC,oBCDpCO,MAff,cAA0Bb,YACxBC,SACE,OACEC,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,gBAEJD,IAAAC,cAAA,WAAK,aAAWC,KAAKC,MAAMS,UAC3BZ,IAAAC,cAAA,WAAK,iBAAeC,KAAKC,MAAMU,aAC/Bb,IAAAC,cAAA,WACAD,IAAAC,cAACQ,IAAI,CAACC,GAAG,KAAI,qBCgDNI,MAxDf,cAAoBhB,YAClBiB,YAAaZ,GACXa,MAAMb,GAWRD,KACAe,aAAgBC,KACd,MAAMC,EAAc,IAAIjB,KAAKkB,MAAMC,MACnCF,EAAYP,SAAWM,EAAEI,OAAOC,MAChCrB,KAAKsB,SAAS,CAACH,KAAMF,MAGvBjB,KACAuB,aAAgBP,KACdA,EAAEQ,iBACFxB,KAAKC,MAAMwB,UAAUzB,KAAKkB,MAAMC,MAChCnB,KAAKsB,SAAS,CAACI,UAAU,MArBzB1B,KAAKkB,MAAQ,CACXC,KAAM,CAEJT,SAAUV,KAAKC,MAAMkB,KAAKT,SAC1BiB,SAAU,IAEZD,UAAU,GAkBd7B,SAEE,OAAIG,KAAKkB,MAAMQ,SACL5B,IAAAC,cAAC6B,IAAQ,CAACpB,GAAG,iBAKrBV,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,SAEJD,IAAAC,cAAA,QAAM8B,SAAU7B,KAAKuB,cACnBzB,IAAAC,cAAA,WACED,IAAAC,cAAA,aAAO,aACPD,IAAAC,cAAA,SAAO+B,KAAK,OAAOC,KAAK,WAAWC,aAAchC,KAAKC,MAAMkB,KAAKT,SAAUuB,SAAUjC,KAAKe,gBAE5FjB,IAAAC,cAAA,WACED,IAAAC,cAAA,aAAO,YACPD,IAAAC,cAAA,SAAO+B,KAAK,WAAWC,KAAK,cAE9BjC,IAAAC,cAAA,cAAQ,WAEVD,IAAAC,cAAA,WACAD,IAAAC,cAACQ,IAAI,CAACC,GAAG,KAAI,2BCmBN0B,MArEEjC,IACf,MAAOkC,EAAaC,GAAkBC,mBAAS,KACxCC,EAAQC,GAAaF,mBAAS,IAoCrC,OACEvC,IAAAC,cAAA,OAAKyC,UAAY,WAAU,IACzB1C,IAAAC,cAAA,UAAI,WAnCU0C,MAChB,MAAMC,QAAEA,GAAYzC,EACpB,OAAOyC,EAAQC,IAAKC,IAClB,IAAIC,EAAOD,EAAOC,KAAKC,MAAM,EAAG,IAChC,OAAOhD,IAAAC,cAAA,MAAIgD,IAAKH,EAAOI,IAAI,KAAGJ,EAAON,OAAO,OAAIxC,IAAAC,cAAA,cAAS6C,EAAOT,aAAqB,OAAKU,MAiCzFJ,GAED3C,IAAAC,cAAA,QAAM8B,SA/BYoB,IACpBA,EAAMzB,iBACN,MAAM0B,EAAY,CAChBZ,OAAQa,WAAWb,GACnBH,cACAU,MAAM,IAAIO,MAAOC,eAEnBpD,EAAMqD,UAAUJ,GAChBd,EAAe,IACfG,EAAU,MAuBNzC,IAAAC,cAAA,SACE+B,KAAK,OACLC,KAAK,cACLV,MAAOc,EACPF,SAAWjB,GAAMoB,EAAepB,EAAEI,OAAOC,OACzCkC,YAAY,cACZC,UAAQ,IAEV1D,IAAAC,cAAA,SACE+B,KAAK,SACLC,KAAK,SACLV,MAAOiB,EACPL,SA9BkBjB,IACtB,MAAMK,EAAQL,EAAEI,OAAOC,OAEL,kBAGJoC,KAAKpC,IAAoB,KAAVA,IAC3BkB,EAAUlB,IAwBRkC,YAAY,SACZC,UAAQ,IAEV1D,IAAAC,cAAA,UAAQ+B,KAAK,UAAS,eAExBhC,IAAAC,cAAA,WACAD,IAAAC,cAACQ,IAAI,CAACC,GAAG,KAAI,0BCKJkD,MArECzD,IACd,MAAOkC,EAAaC,GAAkBC,mBAAS,KACxCC,EAAQC,GAAaF,mBAAS,IAoCrC,OACEvC,IAAAC,cAAA,OAAKyC,UAAY,UAAS,IACxB1C,IAAAC,cAAA,UAAI,UApCS4D,MACf,MAAMC,OAAEA,GAAW3D,EACnB,OAAO2D,EAAOjB,IAAKkB,IACjB,IAAIhB,EAAOgB,EAAMhB,KAAKC,MAAM,EAAE,IAC9B,OAAOhD,IAAAC,cAAA,MAAIgD,IAAKc,EAAMb,IAAI,KAAGa,EAAMvB,OAAO,OAAIxC,IAAAC,cAAA,cAAS8D,EAAM1B,aAAqB,OAAKU,MAkCtFc,GAED7D,IAAAC,cAAA,QAAM8B,SAhCYoB,IACpBA,EAAMzB,iBACN,MAAMsC,EAAW,CACfxB,OAAQa,WAAWb,GACnBH,cACAU,MAAM,IAAIO,MAAOC,eAEnBpD,EAAM8D,SAASD,GACf1B,EAAe,IACfG,EAAU,MAyBNzC,IAAAC,cAAA,SAAO+B,KAAK,OACZC,KAAK,cACLV,MAASc,EACTF,SAAWjB,GAAMoB,EAAepB,EAAEI,OAAOC,OACzCkC,YAAY,cACZC,UAAQ,IAER1D,IAAAC,cAAA,SACA+B,KAAK,SACLC,KAAK,SACLV,MAASiB,EACTL,SA/BkBjB,IACtB,MAAMK,EAAQL,EAAEI,OAAOC,OAEL,kBAGJoC,KAAKpC,IAAoB,KAAVA,IAC3BkB,EAAUlB,IAyBRkC,YAAY,SACZC,UAAQ,IAER1D,IAAAC,cAAA,UAAQ+B,KAAK,UAAS,cAExBhC,IAAAC,cAAA,WACAD,IAAAC,cAACQ,IAAI,CAACC,GAAG,KAAI,oBCyBJwD,MAnFf,cAAkBpE,YAChBiB,cACEC,QAgCAd,KACAsD,UAAaJ,KACXlD,KAAKsB,SAAU2C,IAAS,CACtBC,WAAY,IAAID,EAAUC,WAAYhB,GACtChD,eAAgB+D,EAAU/D,eAAiBgD,EAAUZ,YAIzDtC,KACA+D,SAAYD,KACV9D,KAAKsB,SAAU2C,IAAS,CACtBE,UAAW,IAAIF,EAAUE,UAAWL,GACpC5D,eAAgB+D,EAAU/D,eAAiB4D,EAASxB,YAI1DtC,KACAyB,UAAa2C,KACX,MAAMC,EAAU,IAAIrE,KAAKkB,MAAMoD,aAC/BD,EAAQ3D,SAAW0D,EAAU1D,SAC7BV,KAAKsB,SAAS,CAACgD,YAAaD,MAnD5BrE,KAAKkB,MAAQ,CACXhB,eAAgB,EAChBgE,WAAY,GACZC,UAAW,GACXG,YAAa,CACX5D,SAAU,YACVC,YAAa,aAKnB4D,0BACE,IAEE,MAAMC,QAAwBC,MAAM,oDAC9BC,QAAuBD,MAAM,mDAC7BE,QAAoBH,EAAgBI,OACpCC,QAAmBH,EAAeE,OAKlC1E,EAFeyE,EAAYG,OAAO,CAACC,EAAKnC,IAAWmC,EAAMnC,EAAON,OAAQ,GAC1DuC,EAAWC,OAAO,CAACC,EAAKlB,IAAUkB,EAAMlB,EAAMvB,OAAQ,GAI1EtC,KAAKsB,SAAS,CAAE4C,WAAYS,EAAaR,UAAWU,EAAY3E,mBAChE,MAAO8E,GACPC,QAAQD,MAAM,yCAA0CA,IA4B5DnF,SAWE,OACEC,IAAAC,cAACmF,IAAM,CAACC,SAAS,kBACfrF,IAAAC,cAAA,WACED,IAAAC,cAACqF,IAAK,CAACC,OAAK,EAACC,KAAK,IAAIzF,OAZN0F,IAAOzF,IAAAC,cAACK,EAAI,CAACF,eAAgBF,KAAKkB,MAAMhB,mBAaxDJ,IAAAC,cAACqF,IAAK,CAACC,OAAK,EAACC,KAAK,eAAezF,OAZV2F,IAC3B1F,IAAAC,cAACU,EAAW,CAACC,SAAUV,KAAKkB,MAAMoD,YAAY5D,SAAUC,YAAaX,KAAKkB,MAAMoD,YAAY3D,gBAYxFb,IAAAC,cAACqF,IAAK,CAACC,OAAK,EAACC,KAAK,SAASzF,OAVV4F,IAAO3F,IAAAC,cAACa,EAAK,CAACO,KAAMnB,KAAKkB,MAAMoD,YAAa7C,UAAWzB,KAAKyB,cAW7E3B,IAAAC,cAACqF,IAAK,CAACC,OAAK,EAACC,KAAK,WAAWzF,OAVV6F,IAAO5F,IAAAC,cAACmC,EAAO,CAACQ,QAAS1C,KAAKkB,MAAMgD,WAAYZ,UAAWtD,KAAKsD,cAWnFxD,IAAAC,cAACqF,IAAK,CAACC,OAAK,EAACC,KAAK,UAAUzF,OAVV8F,IAAO7F,IAAAC,cAAC2D,EAAM,CAACE,OAAQ5D,KAAKkB,MAAMiD,UAAWJ,SAAU/D,KAAK+D,iBCtEzE6B,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAA/E,EAAA,GAAAgF,KAAAD,EAAAE,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCIdW,IAAS3G,OACPC,IAAAC,cAACD,IAAM2G,WAAU,KACf3G,IAAAC,cAACiE,EAAG,OAEN0C,SAASC,eAAe,SAO1Bf","file":"static/js/main.1008aa2f.chunk.js","sourcesContent":["/*==================================================\nsrc/components/AccountBalance.js\n\nThe AccountBalance component displays account balance. It is included in other page views.\n==================================================*/\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  // Display account balance\n  render() {\n    return (\n      <div>\n        <strong>Balance: $ {this.props.accountBalance.toFixed(2)}</strong>\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;","/*==================================================\nsrc/components/Home.js\n\nThe Home component is used to demonstrate the use of Link.\n==================================================*/\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n\n        <h1>Bank of React</h1>\n\n        <Link to=\"/userProfile\">User Profile</Link>\n        <br/>\n        <Link to=\"/login\">Login</Link>\n        <br/>\n        <Link to=\"/credits\">Credits (to be implemented in the Assignment)</Link>\n        <br/>\n        <Link to=\"/debits\">Debits (to be implemented in the Assignment)</Link>\n        <br/><br/>\n        <AccountBalance accountBalance={this.props.accountBalance}/>\n      </div>\n    );\n  }\n}\n\nexport default Home;","/*==================================================\nsrc/components/UserProfile.js\n\nThe UserProfile component is used to demonstrate the use of Route and Link.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div>\n        <h1>User Profile</h1>\n\n        <div>Username: {this.props.userName}</div>\n        <div>Member Since: {this.props.memberSince}</div>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","/*==================================================\nsrc/components/Login.js\n\nThe LogIn component is used to demonstrate the use of Redirect.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nclass LogIn extends Component {\n  constructor (props) {  // Create and initialize state\n    super(props)\n    this.state = {\n      user: {\n        //userName: '',\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\n        password: ''\n      },\n      redirect: false  // Redirect property used to trigger Redirect\n    }\n  }\n\n  // When User Name input is changed, capture the new input value and update state\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user};  // Create an object for state\n    updatedUser.userName = e.target.value;  // Set object's userName to the new input value\n    this.setState({user: updatedUser})  // Update state with object values\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\n    this.setState({redirect: true})  // Update state to trigger Redirect\n  }\n  \n  render () {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {  \n      return (<Redirect to=\"/userProfile\"/>);\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return (\n      <div>\n        <h1>Login</h1>\n        \n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label>User Name</label>\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>  \n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default LogIn;","/*==================================================\nsrc/components/Credits.js\n\nThe Credits component contains information for Credits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\nimport React, { useState } from 'react';\nimport '../CSS/credits.css' //my stylings for the page\n\nconst Credits = (props) => {\n  const [description, setDescription] = useState(''); //init my state strings\n  const [amount, setAmount] = useState(''); //init my state strings\n\n  //Create list of Credit items - adapted from Debit starter code\n  let creditsView = () => {\n    const { credits } = props;\n    return credits.map((credit) => {\n      let date = credit.date.slice(0, 10);\n      return <li key={credit.id}> ${credit.amount} ** <strong>{credit.description}</strong> ** {date}</li>\n    });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault(); //NEED THIS! Stops strange 'page refresh' from occuring which deleted user entry\n    const newCredit = {\n      amount: parseFloat(amount),\n      description,\n      date: new Date().toISOString()\n    };\n    props.addCredit(newCredit);  // Pass the new credit object up to App.js\n    setDescription('');\n    setAmount('');\n  };\n\n    // Having a problem using toFixed so i needed to write\n    //this function to stop user entering more than 2 decimal places\n    const handleDecimals = (e) => {\n      const value = e.target.value;\n      // only allow at most 2 decimal places\n      const testValue = /^\\d*\\.?\\d{0,2}$/;\n  \n      // Validate and set amount if valid\n      if (testValue.test(value) || value === '') {\n        setAmount(value);\n      }\n    };\n\n  return (\n    <div className = 'credits'> {/*css container*/}\n      <h1>Credits</h1>\n\n      {creditsView()}\n      {/*Drew! Do not mess with the handleSubmit here. This is what was causing your problems! */}\n      <form onSubmit={handleSubmit}> \n        <input\n          type=\"text\"\n          name=\"description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)} //this is my listener for user action\n          placeholder=\"Description\"\n          required\n        />\n        <input\n          type=\"number\"\n          name=\"amount\"\n          value={amount}\n          onChange = {handleDecimals}   //{(e) => setAmount(e.target.value)} //this is my listener for user action\n          placeholder=\"Amount\"\n          required\n        />\n        <button type=\"submit\">Add Credit</button>\n      </form>\n      <br/>\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  );\n}\n\nexport default Credits;\n\n","/*==================================================\nsrc/components/Debits.js\n\nThe Debits component contains information for Debits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\nimport React, { useState } from 'react';\nimport '../CSS/debits.css' //my stylings for the page\n\nconst Debits = (props) => {\n  const [description, setDescription] = useState('');\n  const [amount, setAmount] = useState('');\n  // Create the list of Debit items\n  let debitsView = () => {\n    const { debits } = props;\n    return debits.map((debit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n      let date = debit.date.slice(0,10);\n      return <li key={debit.id}> ${debit.amount} ** <strong>{debit.description}</strong> ** {date}</li>\n    });\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault(); //NEED THIS! Stops strange 'page refresh' from occuring which deleted user entry\n    const newDebit = {\n      amount: parseFloat(amount),\n      description,\n      date: new Date().toISOString()\n    };\n    props.addDebit(newDebit);  // Pass the new debit object up to App.js\n    setDescription('');\n    setAmount('');\n  };\n\n  // Having a problem using toFixed so i needed to write\n  //this function to stop user entering more than 2 decimal places\n  const handleDecimals = (e) => {\n    const value = e.target.value;\n    // only allow at most 2 decimal places\n    const testValue = /^\\d*\\.?\\d{0,2}$/;\n\n    // Validate and set amount if valid\n    if (testValue.test(value) || value === '') {\n      setAmount(value);\n    }\n  };\n\n  // Render the list of Debit items and a form to input new Debit item\n  return (\n    <div className = 'debits'> {/*css container*/}\n      <h1>Debits</h1>\n\n      {debitsView()}\n\n      <form onSubmit={handleSubmit}>\n        \n        <input type=\"text\" \n        name=\"description\" \n        value = {description} \n        onChange={(e) => setDescription(e.target.value)} //this is my listener for user action\n        placeholder=\"Description\"\n        required />\n\n        <input \n        type=\"number\" \n        name=\"amount\" \n        value = {amount}\n        onChange = {handleDecimals} //{(e) => setAmount(e.target.value)} //this is my listener for user action\n        placeholder=\"Amount\"\n        required/>\n\n        <button type=\"submit\">Add Debit</button>\n      </form>\n      <br/>\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  );\n}\n\nexport default Debits;\n","/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super(); \n    this.state = {\n      accountBalance: 0.00, //cleared out dummy value provided with assignment\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99',\n      }\n    };\n  }\n  //Get Data for assignment from assignment links\n  async componentDidMount() {\n    try {\n      // Fetch credits and debits data\n      const creditsResponse = await fetch('https://johnnylaicode.github.io/api/credits.json');\n      const debitsResponse = await fetch('https://johnnylaicode.github.io/api/debits.json');\n      const creditsData = await creditsResponse.json();\n      const debitsData = await debitsResponse.json();\n\n      // Calc intital balance using accumulator and api data from professor\n      const totalCredits = creditsData.reduce((acc, credit) => acc + credit.amount, 0);\n      const totalDebits = debitsData.reduce((acc, debit) => acc + debit.amount, 0);\n      const accountBalance = totalCredits - totalDebits; //this is the value I must pass to setState\n\n      // Update page with professor's data\n      this.setState({ creditList: creditsData, debitList: debitsData, accountBalance });\n    } catch (error) { //if fetch fails, need to notify user - DZ this seems to solve spotty internet connection issue\n      console.error(\"Error fetching credits or debits data:\", error);\n    }\n  }\n\n    // DZ added function - 10.28.24 credit array\n    addCredit = (newCredit) => {\n      this.setState((prevState) => ({\n        creditList: [...prevState.creditList, newCredit],\n        accountBalance: prevState.accountBalance + newCredit.amount\n      }));\n    }\n  \n    // DZ added function - 10.28.24 debit array\n    addDebit = (newDebit) => {\n      this.setState((prevState) => ({\n        debitList: [...prevState.debitList, newDebit],\n        accountBalance: prevState.accountBalance - newDebit.amount\n      }));\n    }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser};\n    newUser.userName = logInInfo.userName;\n    this.setState({currentUser: newUser})\n  }\n\n  // Create Routes and React elements to be rendered using React components\n  render() {  \n    // Create React elements and pass input props to components\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n    )\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\n    const CreditsComponent = () => (<Credits credits={this.state.creditList} addCredit={this.addCredit}/>) //added my Credit function\n    const DebitsComponent = () => (<Debits debits={this.state.debitList} addDebit={this.addDebit}/>) //added my Debit function\n\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/bank-of-react\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*==================================================\nsrc/index.js\n\nThis file renders the top-level component App which contains all components of the app).\n==================================================*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}